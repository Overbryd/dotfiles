#!/usr/bin/env bash

set -e
test "$(id -u)" -eq 0 || die "This script needs to run as root"

# obtain a username
username="$1"
if [[ "x" = "x$username" ]]; then
  read -p "Enter the user name: " username
fi
username="$(lower $username)"
u_username="_$username"

# check that user does not already exist
if [[ "$username" == $(dscl . -list /Users UniqueID | awk '{print $1}' | grep -w $username) ]]; then
  die "User already exists!"
fi

# generate sensible defaults
realname=$(titleize $username)
lastid=$(dscl . -list /Users UniqueID | awk '{print $2}' | sort -n | tail -1)
unique_id=$((lastid + 1))

# like addgroup but macos
dscl . -create /Groups/$u_username
dscl . -create /Groups/$u_username PrimaryGroupID $unique_id
dscl . -create /Groups/$u_username RecordName $u_username $username
dscl . -create /Groups/$u_username RealName "$realname"
dscl . -create /Groups/$u_username Password \*

# like adduser but macos
dscl . -create /Users/$u_username
dscl . -create /Users/$u_username UserShell /usr/bin/false
dscl . -create /Users/$u_username RealName "$realname"
dscl . -create /Users/$u_username UniqueID $unique_id
dscl . -create /Users/$u_username PrimaryGroupID $unique_id
dscl . -create /Users/$u_username NFSHomeDirectory /var/empty
dscl . -create /Users/$u_username Password \*
dscl . -create /Users/$u_username RecordName $u_username $username
dscl . -delete /Users/$u_username PasswordPolicyOptions
dscl . -delete /Users/$u_username AuthenticationAuthority

echo "New system user $username ($u_username) has been created with unique ID $unique_id"

