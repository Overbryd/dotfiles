#!/opt/homebrew/rbenv/versions/3.2.2/bin/ruby -rhttpx -rjson -rruby2d

OPENAI_ORGANIZATION_KEY = ENV.fetch("OPENAI_ORGANIZATION_KEY")
OPENAI_API_KEY = ENV.fetch("OPENAI_API_KEY")
OPENAI_MODEL = ENV.fetch("OPENAI_MODEL", "gpt-4-turbo")
OPENAI_SYSTEM = ENV.fetch("OPENAI_SYSTEM", "You are a helpful assistant.")
OPENAI_MAX_TOKENS = ENV.fetch("OPENAI_MAX_TOKENS", "2048").to_i

CLICK = Sound.new(File.expand_path("~/Music/click4.wav"))

HTTP = HTTPX
  .plugin(:stream)
  .with(headers: {"Authorization" => "Bearer #{OPENAI_API_KEY}"})

def query(prompt, system: OPENAI_SYSTEM, history: [])
  response = HTTP.post("https://api.openai.com/v1/chat/completions", json: {
    "model" => OPENAI_MODEL,
    "messages" => [
      { role: "system", content: system },
      *history,
      { role: "user", content: prompt },
    ],
    stream: true,
    max_tokens: OPENAI_MAX_TOKENS,
  }, stream: true)
  block_given? ? response.each { |chunk| yield chunk } : response
end

def main
  prompt = if ARGV.any?
    ARGV.join(" ").to_s
  else
    io, _ = select([STDIN], [], [], 0)
    io[0].read if io
  end
  exit unless prompt
  STDOUT.sync = true
  query(prompt, system: OPENAI_SYSTEM) do |chunk|
    chunk.split(/data:\s*/).each do |data|
      json = JSON.parse(data) rescue next
      content = json["choices"][0]["delta"]["content"] rescue next
      print(content)
      CLICK.play
    end
  end
end

main if __FILE__ == $0

